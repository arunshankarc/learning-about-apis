package com.pom.factory.testcases;

import java.util.HashMap;
import java.util.Map;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.PageFactory;
import org.testng.SkipException;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import com.pom.factory.pages.LaunchPage;
import com.pom.factory.pages.LoginPage;
import com.pom.factory.testcases.base.BaseTest;
import com.relevantcodes.extentreports.LogStatus;

public class LoginTest extends BaseTest{
	@Test(dataProvider="getData")
	public void doLogin(HashMap<String, String> data)	{
		extentTest = extentReports.startTest("LoginTest");
		if(data.get("Runmode").equals("N"))	{
			throw new SkipException("Test case skipped because test run mode is N");
		}
		extentTest.log(LogStatus.INFO, "Starting Login Test");
		WebDriver driver = init("Mozilla");
		Map<String, String> resultMap = new HashMap<String, String>();
		LaunchPage launchPage = new LaunchPage(driver, extentTest, resultMap);
		PageFactory.initElements(driver, launchPage);
		LoginPage loginPage = launchPage.gotoLoginPage();
		loginPage.verifyTitle("");
		Object landLoginPage = loginPage.performLogin("arunshankar.c@gmail.com", "Saibaba07!");
		extentTest.log(LogStatus.INFO, "Ending Login Test");
		extentTest.log(LogStatus.PASS, "Login Test passed");
	}
	

	@AfterMethod
	public void quit()	{
		if (extentReports != null) {
			extentReports.endTest(extentTest);
			extentReports.flush();
		}

	}
	
	@DataProvider
	public Object[][] getData()	{	
		String testCaseName = "LoginTest";
		int testStartRowNum = 1;
		while(!xlsReader.getCellData("TestData", 0, testStartRowNum).equals(testCaseName))	{
			testStartRowNum++;
		}
		System.out.println("Test starts from row num - " + testStartRowNum);
		int testColumnsStartRowNum = testStartRowNum + 1;
		int testDataStartRowNum = testStartRowNum + 2;
		
		// calculate rows of data
		int rows = 0;
		
		while(!xlsReader.getCellData("TestData", 0, testDataStartRowNum+rows).equals(""))	{
			rows++;
		}
		System.out.println("Total rows for the test " + rows);
		
		// calculate total columns for data
		int cols = 0;
		
		while(!xlsReader.getCellData("TestData", cols, testColumnsStartRowNum).equals(""))	{
			cols++;
		}
		System.out.println("Total cols for the test " + cols);
		
		Object[][] data = new Object[rows][1];
		HashMap<String, String> map = null;
		// Read the data
		int dataRowNumber = 0;
		for (int rNum=testDataStartRowNum;rNum<testDataStartRowNum+rows;rNum++)	{
			map = new HashMap<String, String>();
			for(int cNum=0;cNum<cols;cNum++)	{
				System.out.println(xlsReader.getCellData("TestData", cNum, rNum));
				//data[dataRowNumber][cNum] = xlsReader.getCellData("TestData", cNum, rNum);
				String key = xlsReader.getCellData("TestData", cNum, testColumnsStartRowNum);
				String value = xlsReader.getCellData("TestData", cNum, rNum);
				map.put(key, value);
				System.out.println(key + " --- " + value);
			}
			data[dataRowNumber][0] = map;
			dataRowNumber++;
		}
		return data;
	}

}
